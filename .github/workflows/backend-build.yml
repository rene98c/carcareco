name: Build Workflow

on:
  workflow_call:
    inputs:
      db-host:
        required: true
        type: string
      db-password:
        required: true
        type: string
      application-host:
        required: true
        type: string
      application-host-user:
        required: true
        type: string
      application-path:
        required: true
        type: string
      ssh-key:
        required: true
        type: string
      consumer-secret:
        required: true
        type: string
      jwt-secret:
        required: true
        type: string
      smtp-host:
        required: true
        type: string
      smtp-port:
        required: true
        type: string
      smtp-user:
        required: true
        type: string
      smtp-password:
        required: true
        type: string
      cors-apphost:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    # All shell commands will execute from the backend/ directory
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      # ---------------------------------------------------------------------
      #  .NET SDK ----------------------------------------------------------------
      - name: Setup .NET 9.x SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.200"
          cache: true
          cache-dependency-path: "**/packages.lock.json"

      # ---------------------------------------------------------------------
      #  Secrets -----------------------------------------------------------------
      - name: Create Secrets.json template
        run: |
          mv src/Carmasters.Http.Api/appsettings.Secrets.json.multitenancy.example \
             src/Carmasters.Http.Api/appsettings.Secrets.json

      - name: Populate Secrets
        uses: microsoft/variable-substitution@v1
        working-directory: backend               # Action itself needs the cwd
        with:
          files: "backend/src/Carmasters.Http.Api/appsettings.Secrets.json"
        env:
          JwtOptions.Secret: "${{ inputs.jwt-secret }}"
          JwtOptions.ConsumerSecret: "${{ inputs.consumer-secret }}"
          DbOptions.Host: "${{ inputs.db-host }}"
          DbOptions.UserId: "postgres"
          DbOptions.Password: "${{ inputs.db-password }}"
          DbOptions.MultiTenancy.Enabled : true
          SmtpOptions.Host: "${{ inputs.smtp-host }}"
          SmtpOptions.Port: "${{ inputs.smtp-port }}"
          SmtpOptions.User: "${{ inputs.smtp-user }}"
          SmtpOptions.Password: "${{ inputs.smtp-password }}"
          GoogleRecaptchaV3:Secret: "secretapikey"
          Cors.AppHost: "${{ inputs.cors-apphost }}"

      # ---------------------------------------------------------------------
      #  Build -------------------------------------------------------------------
      - name: Build API
        run: dotnet build -c Release -o ../../dist/carcare
        working-directory: backend/src/Carmasters.Http.Api
        # After your build step and before the rsync deployment
      - name: Copy Secrets to build output
        working-directory: backend/src/Carmasters.Http.Api
        run: |
          cp appsettings.Secrets.json ../../dist/carcare/

      - name: Build DbUp
        run: dotnet build -c Release -o ../../dist/dbup
        working-directory: backend/src/DbUp

      # ---------------------------------------------------------------------
      #  Deploy ------------------------------------------------------------------
      - name: Deploy DbUp with rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --delete
          path: backend/dist/dbup
          remote_path: ${{ inputs.application-path }}
          remote_host: ${{ inputs.application-host }}
          remote_user: ${{ inputs.application-host-user }}
          remote_key: ${{ inputs.ssh-key }}

      - name: Deploy API with rsync
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avzr --delete --exclude="Carmasters.Http.Api.staticwebassets.runtime.json"
          path: backend/dist/carcare
          remote_path: ${{ inputs.application-path }}
          remote_host: ${{ inputs.application-host }}
          remote_user: ${{ inputs.application-host-user }}
          remote_key: ${{ inputs.ssh-key }}
          

      - name: Run DbUp migrations and reload API
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ inputs.application-host }}
          username: ${{ inputs.application-host-user }}
          key: ${{ inputs.ssh-key }}
          script: |
            sudo service carcare stop
            ${{ inputs.application-path }}dbup/DbUp
            sudo service carcare start
            sudo service carcare status
            sudo journalctl --unit=carcare.service -n 20 --no-pager
